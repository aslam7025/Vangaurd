<%- include("../../views/partials/user/header") %>
<style>
  :root {
    --primary: #2A2A2A;
    --accent: #D4A373;
    --light: #F8F9FA;
    --dark: #212529;
    --transition: 0.3s ease;
  }

  .product-detail-page {
    max-width: 1400px;
    margin: 3rem auto;
    padding: 2rem;
    background: white;
    border-radius: 20px;
    box-shadow: 0 10px 30px rgba(0,0,0,0.1);
    font-family: 'Inter', system-ui, sans-serif;
  }

  .gallery-section {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2rem;
    margin-bottom: 3rem;
     
  }

  .main-image {
    background: var(--light);
    border-radius: 16px;
    padding: 2rem;
    transition: transform var(--transition);
  }

  .main-image img {
    width: 100%;
    height: 500px;
    object-fit: contain;
    mix-blend-mode: multiply;
  }

  .thumbnails-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 1rem;
    margin-top: 1.5rem;
  }

  .thumbnail-img {
    border: 2px solid transparent;
    border-radius: 12px;
    padding: 0.5rem;
    background: white;
    cursor: pointer;
    transition: all var(--transition);
  }

  .thumbnail-img:hover {
    border-color: var(--accent);
    transform: translateY(-3px);
  }

  .product-info {
    padding: 1rem 2rem;
  }

  .product-title {
    font-size: 2.4rem;
    font-weight: 700;
    color: var(--dark);
    margin-bottom: 1.5rem;
    line-height: 1.2;
  }

  .price-section {
    display: flex;
    align-items: center;
    gap: 1.5rem;
    margin: 2rem 0;
  }

  .current-price {
    font-size: 2.2rem;
    font-weight: 800;
    color: var(--accent);
  }

  .original-price {
    font-size: 1.2rem;
    color: #6C757D;
    text-decoration: line-through;
  }

  .size-selector {
    margin: 2rem 0;
  }

  .size-dropdown {
    width: 40%;
    /* padding: 1rem; */
    border: 2px solid #E9ECEF;
    border-radius: 12px;
    font-size: 1rem;
    appearance: none;
    background: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e") no-repeat right 1rem center/16px;
    transition: all var(--transition);
  }

  .size-dropdown:hover {
    border-color: var(--accent);
  }

  .quantity-controls {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin: 1rem;
    padding-left: 1rem;
  }

  .qty-btn {
    width: 45px;
    height: 45px;
    border-radius: 50%;
    background: black;
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    border: none;
    cursor: pointer;
    transition: all var(--transition);
    
  }

  .qty-btn:hover {
    background:   #98780d;
    transform: scale(1.1);
  }

  #quantity {
    font-size: 1.4rem;
    font-weight: 600;
    min-width: 50px;
    text-align: center;
  }

  .add-to-cart-btn {
    width: 100%;
    padding: 1.2rem;
    background:  black;
    color: white;
    border: none;
    border-radius: 12px;
    font-size: 1.1rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    cursor: pointer;
    transition: all var(--transition);
  }

  .add-to-cart-btn:hover {
    background:   #98780d;
    transform: translateY(-2px);
  }

  .product-meta {
    margin-top: 2rem;
    padding-top: 2rem;
    border-top: 1px solid #EEE;
  }

  .offer-badge {
    top: 15px;
    left: 15px;
    background-color: rgb(99, 236, 57);
    color:white;
    padding: 5px 12px;
    border-radius: 20px;
    font-size: 12px;
    font-weight: 600;
    z-index: 1;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    transition: all var(--transition-speed);
}

.offer-badge:hover {
   
    transform: translateY(-2px);
    box-shadow: 0 3px 8px rgba(0, 0, 0, 0.2);
}

  @media (max-width: 992px) {
    .gallery-section {
      grid-template-columns: 1fr;
    }

    .main-image img {
      height: 400px;
    }

    .product-title {
      font-size: 2rem;
    }

    .current-price {
      font-size: 1.8rem;
    }
  }

  @media (max-width: 576px) {
    .product-detail-page {
      padding: 1.5rem;
      margin: 1rem;
      border-radius: 16px;
    }

    .main-image img {
      height: 300px;
    }

    .thumbnails-grid {
      grid-template-columns: repeat(3, 1fr);
    }

    .qty-btn {
      width: 40px;
      height: 40px;
    }
  }
  .current{
    padding: 0px 0px 0px 50px;
  }
  .sample{
    
    height: 100px;
    width: 100px;
    position: absolute;
    
  }
</style>

<main class="product-detail-page">
  
  <div class="gallery-section">
  
    <div class="image-column">
      
      <div class="main-image">
        <img src="/uploads/re-image/<%=product.productImage[0]%>" 
             id="mainImage" 
             alt="<%=product.productName%>">
      </div>
      <div class="thumbnails-grid">
        <% product.productImage.forEach((img, index) => { %>
          <img src="/uploads/re-image/<%=img%>" 
               class="thumbnail-img"
               id="thumbnail-img"
               onclick="document.getElementById('mainImage').src = this.src">
        <% }) %>
      </div>
    </div>
    
    <div class="product-info">
      <h1 class="product-title"><%=product.productName%></h1>
      
      <div class="price-section">
        <span class="current-price" id="dynamic-price">
          â‚¹<%= (sizes && sizes[0].salePrice).toLocaleString('en-IN') %>
        </span>
        <span class="original-price" id="dynamic-regPrice">
          â‚¹<%= (sizes && sizes[0].regularPrice).toLocaleString('en-IN') %>
          
        </span>
        <% if(totalOffer > 0) { %>
          <span class="offer-badge"><%= Math.round(totalOffer) %>% OFF</span>
        <% } %>
       
      </div>

      <p class="product-description"><%=product.description%></p>

      <div class="size-selector">
        <select class="size-dropdown" id="size-select" onchange="updatePrice()">
          <% product.sizes.forEach((size) => { %>
            <option value="<%=size.salePrice%>"
              data-saleprice="<%= size.salePrice %>"
              data-regularprice="<%= size.regularPrice %>">
              <%=size.size%> - â‚¹<%=size.salePrice.toLocaleString('en-IN')%>
            </option>
          <% }) %>
        </select>
      </div>

      <div class="quantity-controls">
        <button class="qty-btn" onclick="adjustQuantity(-1)">âˆ’</button>
        <span id="quantity">1</span>
        <button class="qty-btn" onclick="adjustQuantity(1)">+</button>
      </div>

      <form action="/addTocart" method="post">
        <input type="hidden" name="productId" value="<%=product._id%>">
        <input type="hidden" id="selectedSize" name="size" value="<%= product.sizes[0].size %>">
        <button type="submit" class="add-to-cart-btn">
          ðŸ›’ Add to Cart
        </button>
      </form>

      <div class="product-meta">
        <p><strong>Brand:</strong> <%=product.brand%></p>
        <p><strong>Category:</strong> <%=category.name%></p>
        <p><strong>Stock:</strong> <span class="stock-status"><%=quantity%> available</span></p>
      </div>
    </div>
  </div>
</main>

<%- include("../../views/partials/user/footer") %>

<script>
  // Preserve existing functionality with minor optimizations
  function adjustQuantity(change) {
    const quantityElement = document.getElementById('quantity');
    let quantity = parseInt(quantityElement.textContent) + change;
    quantity = Math.max(1, quantity);
    quantityElement.textContent = quantity;
  }

  function updatePrice() {
    const sizeSelect = document.querySelector('#size-select');
    const selectedOption = sizeSelect.options[sizeSelect.selectedIndex];
    
    document.getElementById('dynamic-price').textContent = 
      `â‚¹${parseInt(selectedOption.dataset.saleprice).toLocaleString('en-IN')}`;
    
    document.getElementById('dynamic-regPrice').textContent = 
      `â‚¹${parseInt(selectedOption.dataset.regularprice).toLocaleString('en-IN')}`;
    
    document.getElementById('selectedSize').value = 
      selectedOption.text.split(' - ')[0];
  }

  // Initialize image zoom
  document.addEventListener('DOMContentLoaded', () => {
    $('#mainImage').elevateZoom({
      zoomType: "lens", // Corrected from "lense" to "lens"
      lensShape: "round", // Can be 'round' or 'square'
      lensSize: 200, // Adjust the size of the lens
      cursor: "crosshair",
      responsive: true
    });
 
});
 
</script>