<%- include("../partials/user/header") %>
<style>
    :root {
        --primary: #2A2F4F;
        --secondary: #917FB3;
        --accent: #E5BEEC;
        --light: #FDE2F3;
        --success: #4CAF50;
        --warning: #FFC107;
        --danger: #F44336;
        --info: #2196F3;
    }

    .header__nav__option {
        display: none;
    }

    .order-details-container {
        max-width: 1200px;
        margin: 3rem auto;
        padding: 0 1.5rem;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .order-card {
        background: white;
        border-radius: 16px;
        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.08);
        overflow: hidden;
        margin-bottom: 2.5rem;
    }

    .order-header {
        background: white;
        color:black;
        padding: 1.5rem 2rem;
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        align-items: center;
        gap: 1rem;
    }

    .order-title {
        font-size: 1.5rem;
        font-weight: 600;
        margin: 0;
    }

    .order-id {
        color: black;
        font-weight: 500;
        font-size: 20px;
    }

    .order-status {
        padding: 0.5rem 1.25rem;
        border-radius: 50px;
        font-weight: 600;
        font-size: 0.9rem;
        text-transform: capitalize;
        letter-spacing: 0.5px;
    }

    .status-pending { background: var(--warning); color: #000; }
    .status-delivered { background: var(--success); color: white; }
    .status-processing { background: var(--info); color: white; }
    .status-cancelled { background: var(--danger); color: white; }
    .status-return-request { background: var(--accent); color: var(--primary); }

    .order-body {
        padding: 2rem;
    }

    .section-title {
        font-size: 1.25rem;
        color: var(--primary);
        margin-bottom: 1.5rem;
        padding-bottom: 0.75rem;
        border-bottom: 2px solid rgba(42, 47, 79, 0.1);
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .section-title i {
        font-size: 1.1rem;
    }

    .order-items-list {
        display: grid;
        gap: 1.25rem;
    }

    .order-item {
        display: flex;
        gap: 1.5rem;
        padding: 1.25rem;
        border-radius: 12px;
        background: rgba(249, 249, 249, 0.5);
        /* border: 1px solid rgba(145, 127, 179, 0.15); */
        transition: all 0.3s ease;
    }

    .order-item:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(145, 127, 179, 0.1);
    }

    .item-image {
        width: 100px;
        height: 100px;
        object-fit: cover;
        border-radius: 8px;
        border: 1px solid rgba(0, 0, 0, 0.05);
    }

    .item-details {
        flex: 1;
    }

    .item-name {
        font-size: 1.1rem;
        font-weight: 600;
        color: var(--primary);
        margin-bottom: 0.5rem;
    }

    .item-meta {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
        color: #555;
        font-size: 0.95rem;
        margin-bottom: 0.5rem;
    }

    .item-meta span {
        display: flex;
        align-items: center;
        gap: 0.3rem;
    }

    .item-price {
        font-weight: 600;
        color: var(--primary);
    }

    .item-total {
        min-width: 120px;
        text-align: right;
        font-weight: 700;
        color: var(--secondary);
    }

    .order-summary {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
        margin-top: 2.5rem;
    }

    .summary-card {
        background: white;
        border-radius: 12px;
        padding: 1.5rem;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
    }

    .summary-row {
        display: flex;
        justify-content: space-between;
        padding: 0.75rem 0;
        border-bottom: 1px dashed rgba(0, 0, 0, 0.1);
    }

    .summary-row:last-child {
        border-bottom: none;
    }

    .total-row {
        font-weight: 700;
        color: var(--primary);
        font-size: 1.1rem;
    }

    .address-card {
        background: white;
        border-radius: 12px;
        padding: 1.5rem;
        margin-top: 2rem;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
    }

    .address-name {
        font-weight: 600;
        font-size: 1.1rem;
        margin-bottom: 0.5rem;
    }

    .address-details {
        color: #555;
        line-height: 1.6;
    }

    .action-buttons {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
        margin-top: 2.5rem;
    }

    .btn {
        margin-top: 15px;
        padding: 0.85rem 2rem;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-align: center;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
    }

    .btn-primary {
        background: var(--primary);
        color: white;
        border: 2px solid var(--primary);
    }

    .btn-primary:hover {
        background: #1a1f3f;
        border-color: #1a1f3f;
    }

    .btn-outline {
        background: transparent;
        color: var(--primary);
        border: 2px solid var(--primary);
    }

    .btn-outline:hover {
        background: var(--primary);
        color: white;
    }

    .btn-secondary {
        background: var(--secondary);
        color: white;
        border: 2px solid var(--secondary);
    }

    .btn-secondary:hover {
        background: #7f6b9f;
        border-color: #7f6b9f;
    }

    @media (max-width: 768px) {
        .order-item {
            flex-direction: column;
            gap: 1rem;
        }
        
        .item-total {
            text-align: left;
        }
        
        .action-buttons {
            flex-direction: column;
        }
        
        .btn {
            width: 100%;
        }
    }

    @media (max-width: 480px) {
        .order-header {
            flex-direction: column;
            align-items: flex-start;
        }
        
        .order-body {
            padding: 1.5rem;
        }
        
        .order-summary {
            grid-template-columns: 1fr;
        }
    }
    .btn-back{
        width: 20%;
        padding: 0.85rem;
        background-color: black;
        color: white;
        border: none;
        border-radius: 8px;
        font-size: 1rem;
        cursor: pointer;
        transition: background-color 0.3s ease;
        font-weight: bold;
        margin-top: 1rem;
        text-decoration: none;

    }
    .btn-back:hover {
        background-color: #98780d;
        color: white;
    }
    .btn-danger {
        background: var(--danger);
        color: white;
        border: 2px solid var(--danger);
    }
    
    .btn-danger:hover {
        background: #d32f2f;
        border-color: #d32f2f;
    }
    .btn-cancel {
        position: relative;
        padding: 0.8em 1.8em;
        border: 2px solid var(--danger);
        border-radius: 10px;
        background: linear-gradient(45deg, var(--danger) 0%, #ff2c2c 100%);
        color: white;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        overflow: hidden;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 0.8rem;
        box-shadow: 0 4px 15px rgba(244, 67, 54, 0.2);
    }

    .btn-cancel::before {
        content: '';
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background: white;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .btn-cancel:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 25px rgba(244, 67, 54, 0.3);
        color: var(--danger);
    }

    .btn-cancel:hover::before {
        opacity: 0.15;
    }

    .btn-cancel:active {
        transform: translateY(0);
        box-shadow: 0 3px 15px rgba(244, 67, 54, 0.2);
    }

    .btn-cancel i {
        transition: transform 0.3s ease;
    }

    .btn-cancel:hover i {
        transform: rotate(90deg);
        color: var(--danger);
    }

    .btn-cancel:focus {
        outline: 2px solid rgba(244, 67, 54, 0.5);
        outline-offset: 2px;
    }
    .product-status {
    display: inline-block;
    padding: 5px 10px;
    border-radius: 12px;  
    font-weight: bold;
    font-size: 14px;
    text-transform: capitalize;
    background-color: #dc3545;  
    color: white;
}
</style>

<div class="order-details-container">
    <div class="order-card">
        <div class="order-header">
            <h1 class="order-title">Order <span class="order-id">#<%= order.orderId %></span></h1>
            <span class="order-status status-<%= order.status.toLowerCase().replace(' ', '-') %>">
                <%= order.status %>
            </span>
        </div>
        
        <div class="order-body">
            <div class="order-section">
                <h2 class="section-title">
                    <i class="fas fa-box-open"></i> Order Items
                </h2>
                
                <div class="order-items-list">
                    <% order.orderedItems.forEach(item => { %>
                        <div class="order-item">
                            <img src="/uploads/re-image/<%= item.product.productImage[0]%>" alt="<%= item.product.productName %>" class="item-image">
                            
                            <div class="item-details">
                                <h3 class="item-name"><%= item.product.productName %></h3>
                                <div class="item-meta">
                                    <span><i class="fas fa-ruler-combined"></i> Size: <%= item.size || 'N/A' %></span>
                                    <span><i class="fas fa-layer-group"></i> Qty: <%= item.quantity %></span>
                                    <span><i class="fas fa-tag"></i> â‚¹<%= item.price.toFixed(2) %></span><br>
                                    <% if (item.productStatus === 'Cancelled') { %><p>Status: <span class="product-status"><%= item.productStatus %></span></p><% } %> 
                                </div>
                                <% if ((order.status === 'Pending' || order.status === 'Processing') && (item.productStatus === 'Confirmed' || item.productStatus === 'Processing' ||item.productStatus === 'Pending' )) {  %>
                                    <button onclick="confirmCancel('<%= order.orderId %>','<%=item._id%>')" class="btn-cancel">
                                        <i class="fas fa-times-circle"></i> Cancel Order
                                    </button>
                                <% } %>
                            </div>
                            
                            <div class="item-total">
                                â‚¹<%= (item.price * item.quantity).toFixed(2) %>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>
            
            <div class="order-summary">
                <div class="summary-card">
                    <h2 class="section-title">
                        <i class="fas fa-receipt"></i> Price Details
                    </h2>
                    
                    <div class="summary-row">
                        <span>Subtotal</span>
                        <span>â‚¹<%= order.totalPrice.toFixed(2) %></span>
                    </div>
                    <div class="summary-row">
                        <span>Tax</span>
                        <span>â‚¹<%= order.tax.toFixed(2) %></span>
                    </div>
                    
                    <% if (order.discount > 0) { %>
                        <div class="summary-row">
                            <span>Discount</span>
                            <span>- â‚¹<%= order.discount.toFixed(2) %></span>
                        </div>
                    <% } %>
                    
                    <div class="summary-row total-row">
                        <span>Total Amount</span>
                        <span>â‚¹<%= order.finalAmount.toFixed(2) %></span>
                    </div>
                </div>
                
                <div class="summary-card address-card">
                    <h2 class="section-title">
                        <i class="fas fa-truck"></i> Shipping Address
                    </h2>
                    
                    <div class="address-content">
                        <p class="address-name"><%= order.address.name %></p>
                        <div class="address-details">
                            <p><%= order.address.city %>, <%= order.address.state %></p>
                            <p><%= order.address.landMark %></p>
                            <p>Pincode: <%= order.address.pincode %></p>
                            <p>Phone: <%= order.address.phone %></p>
                            <% if (order.address.altPhone) { %>
                                <p>Alt. Phone: <%= order.address.altPhone %></p>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="action-buttons">
                <a href="/orders" class="btn-back">
                    <i class="fas fa-arrow-left"></i> Back to Orders
                </a>
                
           
                
                <% if (order.status === 'Delivered') { %>
                    <form id="returnForm" action="/return-order/<%= order._id %>" method="post" class="return-form">
                        <input type="hidden" name="returnReason" id="returnReason">
                        <button type="button" class="btn btn-danger" onclick="askReturnReason()">
                            <i class="fas fa-undo-alt"></i> Return Order
                        </button>
                    </form>
                <% } %>
            </div>
        </div>
    </div>
</div>

 

<%- include("../partials/user/footer") %>
<script>
     function confirmCancel(orderId, itemId) {
    Swal.fire({
        title: "Are you sure?",
        text: "Do you really want to cancel this item? This action cannot be undone.",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#d33",
        cancelButtonColor: "#3085d6",
        confirmButtonText: "Yes, Cancel it!"
    }).then((result) => {
        if (result.isConfirmed) {
            fetch("/cancel-order-item", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ orderId: orderId, itemId: itemId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.message === "Item cancelled successfully") {
                    Swal.fire({
                        title: "Cancelled!",
                        text: "Your item has been cancelled and refunded.",
                        icon: "success",
                        confirmButtonColor: "#3085d6"
                    }).then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: data.message || "Something went wrong.",
                        icon: "error",
                        confirmButtonColor: "#d33"
                    });
                }
            })
            .catch(error => {
                console.error("Error:", error);
                Swal.fire({
                    title: "Error!",
                    text: "Something went wrong. Please try again.",
                    icon: "error",
                    confirmButtonColor: "#d33"
                });
            });
        }
    });
}

</script>