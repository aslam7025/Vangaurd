<%- include("../../views/partials/admin/header") %>
<head>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">

</head>
<style>
   .error-message{
       color: red;
   }


       .thumbnails-container {
           display: flex;
           overflow-x: auto;
       }


       .thumbnail {
           margin-right: 10px;


       }
</style>
   <section class="content-main">
       <div class="row">
           <div class="col-9">
               <div class="content-header">
                   <h2 class="content-title">Add New Product</h2>
               </div>
           </div>
           <div class="col-lg-6">
               <div class="card mb-4">
                   <div class="card-body">
                       <form method="post" action="/admin/addProducts" enctype="multipart/form-data"
                           onsubmit="return validateForm()">
                           <div class="mb-4">
                               <label for="product_name" class="form-label">Product Name</label>
                               <input type="text" placeholder="Type here" name="productName"
                                   class="form-control border" id="product_name">
                               <div id="productName-error" class="error-message"></div>
                           </div>
                           <div class="col-lg-4 mb-4">
                               <label class="form-label">Brand</label>
                               <select class="form-select border" name="brand">

                                <%for(let i = 0 ; i<brand.length ; i++){%>
                                   
                                
                                       <option value="<%=brand[i].brandName%>">

                                        <%=brand[i].brandName%>
                                           
                                       </option>
                                       <%}%>
                                     
                               </select>
                               <div id="brand-error" class="error-message"></div>
                           </div>
                           <div class="mb-4">
                               <label class="form-label">Full description</label>
                               <textarea placeholder="Type here" id="descriptionid" name="description" class="form-control border"
                                   rows="4"></textarea>
                               <div id="description-error" class="error-message"></div>
                           </div>

                           <div id="sizes-container">
                            <div class="size-entry">
                                <div class="row">
                                    <div class="col-lg-4">
                                        <label class="form-label">Size</label>
                                        <input name="size[]" type="text" class="form-control border size-input">
                                        <div class="error-message size-error"></div>
                                    </div>
                                    <div class="col-lg-4">
                                        <label class="form-label">Regular Price for Size</label>
                                        <input name="regularPrice[]" type="text" class="form-control border price-input">
                                        <div class="error-message regularPrice-error"></div>
                                    </div>
                                    <div class="col-lg-4">
                                        <label class="form-label">Sale Price for Size</label>
                                        <input name="salePrice[]" type="text" class="form-control border sale-price-input">
                                        <div class="error-message salePrice-error"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <button type="button" id="add-size-btn" class="btn btn-secondary">Add Another Size</button>
                        


                           <div class="row">
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Quantity</label>
                                       <input placeholder="" name="quantity" type="text" class="form-control border">
                                       <div id="quantity-error" class="error-message"></div>
                                   </div>
                               </div>
                           </div>
                           
                           <div class="card mb-4">
                               <div class="card-body">
                                   <div class="row gx-2">
                                       <div class="col-sm-6 mb-3">
                                           <label class="form-label">Category</label>
                                           <select class="form-select border" style="width: 150px;" name="category">
                                               <%for(let i = 0; i<cat.length; i++ ){%>

                                                   <option value="<%=cat[i].name%>">

                                                    <%=cat[i].name%>
                                                       
                                                   </option>
                                                   <%}%>
                                           </select>
                                           <div id="category-error" class="error-message"></div>
                                       </div>
                                   </div>
                               </div>
                           </div>
                           <div class="card mb-2">
                               <div class="card-header">
                                   <h4>Choose images</h4>
                               </div>
                               <div class="border row">
                                   <div id="addedImagesContainer" class="thumbnails-container"></div>
                               </div>
                               <div class="row">
                                   <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                       <img src="" alt="" id="imgView1">
                                                                   <input class="form-control" type="file" name="images" id="input1"
                                                                       accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage1(event), viewImage(event, 1)">
                                                                       <div id="images-error" class="error-message"></div>
                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg1" alt="">
                                                                   <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                                               </div>
                                                           </div>
                                                          
                                                           <div class="row">
                                                               <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                                   <img src="" alt="" id="imgView2">


                                                                   <input class="form-control" type="file" name="images" id="input2"
                                                                       accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage2(event),viewImage(event, 2)">
                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg2" alt="">
                                                                   <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                                               </div>
                                                           </div>
                                                          
                                                           <div class="row">
                                                               <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                                   <img src="" alt="" id="imgView3">


                                                                   <input class="form-control" type="file" name="images" id="input3"
                                                                       accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage3(event),viewImage(event, 3)">
                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg3" alt="">
                                                                   <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                                               </div>
                                                           </div>
                                                          
                                                           <div class="row">
                                                               <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                                   <img src="" alt="" id="imgView4">


                                                          
                                                                   <input class="form-control" type="file" name="images" id="input4"
                                                                       accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage4(event),viewImage(event, 4)">
                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg4" alt="">
                                                                   <button type="button" id="saveButton4" class="btn-sm btn-primary">Save</button>
                                                               </div>
                                                           </div>
                          
                                                       </div>
                           </div>
                           <div>
                               <button class="btn btn-md rounded font-sm hover-up"  type="button" onclick="validateAndSubmit()
">Publish</button>
                           </div>
                       </form>
                   </div>
               </div>
           </div>
       </div>
   </section>

   
<script>

 
document.getElementById('add-size-btn').addEventListener('click', function() {
    const container = document.getElementById('sizes-container');
    const newSizeEntry = document.querySelector('.size-entry').cloneNode(true);

    // Clear input values
    newSizeEntry.querySelectorAll('input').forEach(input => input.value = '');
    
    // Clear error messages
    newSizeEntry.querySelectorAll('.error-message').forEach(error => error.innerText = '');

    container.appendChild(newSizeEntry);
});

// Validate Form Before Submitting
function validateAndSubmit(){
    if(validateForm()){
        document.forms[0].submit();
    }
}

// Form Validation
function validateForm() {
    clearErrorMessages(); // Clear errors before validation
    let isValid = true;

    // Validate Product Fields
    const name = document.getElementsByName('productName')[0].value.trim();
    const description = document.getElementById('descriptionid').value.trim();
    const brand = document.getElementsByName('brand')[0].value.trim();
    const category = document.getElementsByName('category')[0].value.trim();
    const images = document.getElementById('input1');
    let quantity = document.getElementsByName('quantity')[0].value.trim()
    

    if (name === "" || !/^[a-zA-Z\s]+$/.test(name)) {
        displayErrorMessage('productName-error', 'Enter a valid product name (only letters and spaces).');
        isValid = false;
    }

    if (description === "" || !/^[a-zA-Z\s]+$/.test(description)) {
        displayErrorMessage('description-error', 'Enter a valid description (only letters and spaces).');
        isValid = false;
    }

    if (quantity ==="" || isNaN(quantity) || (quantity) < 0 ) {
        displayErrorMessage('quantity-error', 'Enter a valid non-negative quantity.');
        isValid = false;
    }

    if (images.files.length === 0) {
        displayErrorMessage("images-error", 'Please select an image.');
        isValid = false;
    }

    // Validate Size, Regular Price, and Sale Price
    const sizeEntries = document.querySelectorAll('.size-entry');
    
    sizeEntries.forEach(entry => {
        const size = entry.querySelector('.size-input').value.trim();
        const regularPrice = entry.querySelector('.price-input').value.trim();
        const salePrice = entry.querySelector('.sale-price-input').value.trim();

        if (size === "") {
            displayErrorMessage(entry.querySelector('.size-error'), 'Please enter a size.');
            isValid = false;
        }

        if (!/^\d+(\.\d{1,2})?$/.test(regularPrice) || parseFloat(regularPrice) < 0) {
            displayErrorMessage(entry.querySelector('.regularPrice-error'), 'Enter a valid non-negative price.');
            isValid = false;
        }

        if (!/^\d+(\.\d{1,2})?$/.test(salePrice) || parseFloat(salePrice) < 0) {
            displayErrorMessage(entry.querySelector('.salePrice-error'), 'Enter a valid non-negative sale price.');
            isValid = false;
        }

        if (parseFloat(regularPrice) <= parseFloat(salePrice)) {
            displayErrorMessage(entry.querySelector('.regularPrice-error'), 'Regular price must be greater than sale price.');
            isValid = false;
        }
    });

    return isValid;
}


console.log("Quantity:", quantity);
console.log("Size:", size);
console.log("Regular Price:", regularPrice);
console.log("Sale Price:", salePrice);





// Display Error Messages
function displayErrorMessage(element, message) {

    if(typeof element === "string"){
        element = document.getElementById(element)
    }
  
    element.innerText = message;
    element.style.display = "block";
}





// Clear Previous Error Messages
function clearErrorMessages() {
    document.querySelectorAll('.error-message').forEach(error => error.innerText = '');
}









function viewImage1(event) {
       
       document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])

}


function viewImage2(event) {
       
       document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])

   }

   function viewImage3(event) {
       
       
       document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
 
   }


   function viewImage4(event) {
       
       document.getElementById('imgView4').src = URL.createObjectURL(event.target.files[0])

   }


// Image Preview & Cropping
function viewImage(event, index) {
    let input = event.target;
    let reader = new FileReader();

    reader.onload = function () {
        let dataURL = reader.result;
        let image = document.getElementById('imgView' + index);
        image.src = dataURL;

        let cropper = new Cropper(image, {
            aspectRatio: 1,
            viewMode: 1,
            guides: true,
            background: false,
            autoCropArea: 1,
            zoomable: true,
        });

        let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
        cropperContainer.style.display = 'block';

        let saveButton = document.querySelector('#saveButton' + index);
        
        saveButton.addEventListener('click', async function () {
            let croppedCanvas = cropper.getCroppedCanvas();
            let croppedImage = document.getElementById('croppedImg' + index);
            croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);

            let timestamp = new Date().getTime();
            let fileName = `cropped-img-${timestamp}-${index}.png`;

            await croppedCanvas.toBlob((blob) => {
                let input = document.getElementById('input' + index);
                let imgFile = new File([blob], fileName, { type: blob.type });
                const fileList = new DataTransfer();
                fileList.items.add(imgFile);
                input.files = fileList.files;
            });

            cropperContainer.style.display = 'none';
            cropper.destroy();
        });
    };
    reader.readAsDataURL(input.files[0]);
}

// Handle Multiple Image Selection & Thumbnails
const selectedImages = [];
document.getElementById('input1').addEventListener('change', handleFileSelect);

function handleFileSelect(event) {
    const addedImagesContainer = document.getElementById('addedImagesContainer');
    addedImagesContainer.innerHTML = '';
    const files = event.target.files;

    for (let i = 0; i < files.length; i++) {
        const file = files[i];
        selectedImages.push(file);

        const thumbnail = document.createElement('div');
        thumbnail.classList.add('thumbnail');

        const img = document.createElement("img");
        img.src = URL.createObjectURL(file);
        img.alt = 'thumbnail';
        img.style.width = "50px";
        img.style.height = 'auto';

        const removeIcon = document.createElement('span');
        removeIcon.classList.add('remove-icon');
        removeIcon.innerHTML = "&times;";
        removeIcon.addEventListener('click', () => {
            const index = selectedImages.indexOf(file);
            if (index !== -1) {
                selectedImages.splice(index, 1);
            }
            thumbnail.remove();
        });

        thumbnail.appendChild(img);
        thumbnail.appendChild(removeIcon);
        addedImagesContainer.appendChild(thumbnail);
    }
}


</script>





<%- include("../../views/partials/admin/footer") %>
